00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 5/14/2020 2:44:29 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : 68k   Disassembler    
00000000                             3  * Written by :
00000000                             4  * Date       : 06/xx/2020    
00000000                             5  * Description: Final Project    
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  START:                  ; first instruction of program
00001000                             9  
00001000                            10  * Put program code here
00001000                            11  *_______Basic Print Out Welcome Message__________   
00001000  43F9 000010AA             12      LEA Mes_Welcome,    A1  
00001006  103C 000D                 13      MOVE.B  #13,    D0  
0000100A  4E4F                      14      TRAP    #15 
0000100C                            15      
0000100C                            16  *_______Get User Input____________________________
0000100C                            17  GetInput
0000100C  43F9 000010E7             18      LEA Mes_Start_Adr,  A1  ; ask start loc
00001012  103C 000E                 19      MOVE.B  #14, D0   
00001016  4E4F                      20      Trap    #15     
00001018                            21      *BRA Invalid 
00001018  43F9 00001166             22      LEA UserInput,  A1  
0000101E  103C 0002                 23      MOVE.B  #2, D0  
00001022  4E4F                      24      TRAP    #15 
00001024                            25      
00001024  4282                      26      CLR.L   D2  
00001026  4283                      27      CLR.L   D3  
00001028  4EB9 0000103A             28      JSR ConvertInput        
0000102E                            29      * Store user Input start address to A5
0000102E  23C3 0000116A             30      MOVE.L  D3, StartLocData
00001034  2A79 0000116A             31      MOVE.L  StartLocData, A5    
0000103A                            32  *   Subroutine
0000103A                            33  *_________________________________________________
0000103A                            34  ConvertInput        
0000103A  1419                      35         MOVE.B  (A1)+,  D2   
0000103C  4EB9 00001052             36         JSR    ConvertASCII
00001042  D682                      37         ADD.L    D2, D3        
00001044  0C11 0000                 38         CMPI.B   #$0,    (A1)    
00001048  6700 0006                 39         BEQ GoBack
0000104C                            40         *LSL.B    #4, D2     
0000104C                            41         *LSR.B    #4, D2    
0000104C  E98B                      42         LSL.L    #4, D3  
0000104E                            43         *ADD.L    D2, D3 
0000104E  60EA                      44         BRA  ConvertInput
00001050                            45  GoBack
00001050  4E75                      46          RTS    
00001052                            47         *LSR.B    
00001052                            48  ConvertASCII
00001052                            49          * 30~39 Number
00001052                            50          * 41~46 Cap Letter Till F
00001052                            51          * 61~66 Till f
00001052  0C02 0040                 52          CMPI.B   #$40,   D2 * 40 is immeidate data use CMPI   
00001056  6D00 000A                 53          BLT IsNumber * If less than 40 then execute 
0000105A  0C02 0041                 54          CMPI.B  #$41,   D2  * if not compare with 41 (A)    
0000105E  6C00 0010                 55          BGE IsLetter    *Bigger than or Equal to 41 then execute    
00001062                            56  IsNumber
00001062  0402 0030                 57          SUB.B   #$30,   D2     
00001066                            58          *BRA ConvertASCII  
00001066  0C02 0009                 59          CMPI.B  #$9,    D2  * Compare with 9 should be less or equal to be number      
0000106A  6E00 001C                 60          BGT Invalid   
0000106E  4E75                      61          RTS 
00001070                            62  IsLetter
00001070                            63          * figure out either small leter or capital letter   
00001070  0C02 0046                 64          CMPI.B  #$46,   D2  * Compare with small letter F            
00001074  6F00 0006                 65          BLE CapitalLetter   * if less or equal to 46 than small letter     
00001078  6000 0008                 66          BRA SmallLetter     * else go to capital letter 
0000107C                            67  CapitalLetter   
0000107C  0402 0037                 68          SUB.B   #$37,   D2    
00001080  4E75                      69          RTS 
00001082                            70  SmallLetter  
00001082  0402 0057                 71          SUB.B   #$57,   D2    
00001086  4E75                      72          RTS 
00001088                            73          * tomorrow continue (less than 39) then subtract 30
00001088                            74          
00001088                            75  Invalid 
00001088  43F9 00001163             76          LEA Extra_Space,    A1  
0000108E  103C 000E                 77          MOVE.B  #14,    D0  
00001092  4E4F                      78          TRAP    #15 
00001094                            79          
00001094  43F9 00001127             80          LEA Mes_Invalid, A1 
0000109A  103C 000E                 81          MOVE.B  #14,    D0  
0000109E  4E4F                      82          TRAP    #15 
000010A0                            83          
000010A0  103C 0009                 84          MOVE.B  #9,    D0     
000010A4  4E4F                      85          TRAP    #15  
000010A6  FFFF FFFF                 86      SIMHALT             ; halt simulator
000010AA                            87  
000010AA                            88  * Put variables and constants here
000010AA                            89  * Basic Print Message   
000010AA                            90  *____________________________________________________________________
000010AA  =0000000D                 91  CR  EQU $0D     *   Carriage Return
000010AA  =0000000A                 92  LF  EQU $0A     *   Line Feed
000010AA                            93  
000010AA= 57 65 6C 63 6F 6D ...     94  Mes_Welcome     DC.B    'Welcome to Disassembler Program', CR,  LF
000010CB= 46 69 6E 61 6C 20 ...     95                              DC.B    'Final Project for CSS 422',    CR, LF, 0
000010E7= 50 6C 65 61 73 65 ...     96  Mes_Start_Adr       DC.B    'Please Enter Starting Location: ', 0
00001108= 50 6C 65 61 73 65 ...     97  Mes_End_Adr     DC.B    'Please Enter Ending Location: ', 0
00001127                            98  
00001127= 54 68 65 20 41 64 ...     99  Mes_Invalid DC.B   'The Address You provided is Invalid', CR,  LF
0000114C= 54 65 72 6D 69 6E ...    100            DC.B 'Terminating Program.',  CR, LF, 0     
00001163= 0D 0A 00                 101  Extra_Space DC.B    CR, LF, 0   
00001166                           102  
00001166                           103  * Define Storage
00001166                           104  *_____________________________________________________________________
00001166                           105  UserInput   DS.L    1   
0000116A                           106  StartLocData    DS.L    1   * store starting address
0000116E                           107      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
CAPITALLETTER       107C
CONVERTASCII        1052
CONVERTINPUT        103A
CR                  D
EXTRA_SPACE         1163
GETINPUT            100C
GOBACK              1050
INVALID             1088
ISLETTER            1070
ISNUMBER            1062
LF                  A
MES_END_ADR         1108
MES_INVALID         1127
MES_START_ADR       10E7
MES_WELCOME         10AA
SMALLLETTER         1082
START               1000
STARTLOCDATA        116A
USERINPUT           1166
