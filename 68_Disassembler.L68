00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 5/14/2020 7:56:51 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : 68k   Disassembler    
00000000                             3  * Written by :
00000000                             4  * Date       : 06/xx/2020    
00000000                             5  * Description: Final Project    
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  START:                  ; first instruction of program
00001000                             9  
00001000                            10  * Put program code here
00001000                            11  *_______Basic Print Out Welcome Message__________   
00001000  43F9 000010DC             12      LEA Mes_Welcome,    A1  
00001006  103C 000D                 13      MOVE.B  #13,    D0  
0000100A  4E4F                      14      TRAP    #15 
0000100C                            15      
0000100C                            16  *_______Get User Input____________________________
0000100C                            17  GetInputStartADR
0000100C  4282                      18      CLR.L   D2  
0000100E  4283                      19      CLR.L   D3
00001010                            20     
00001010  43F9 00001119             21      LEA Mes_Start_Adr,  A1  ; ask start loc
00001016  103C 000E                 22      MOVE.B  #14, D0   
0000101A  4E4F                      23      Trap    #15     
0000101C                            24      *BRA Invalid 
0000101C  43F9 00001198             25      LEA UserInput,  A1  
00001022  103C 0002                 26      MOVE.B  #2, D0  
00001026  4E4F                      27      TRAP    #15 
00001028                            28      
00001028  4282                      29      CLR.L   D2  
0000102A  4283                      30      CLR.L   D3  
0000102C  4EB9 00001052             31      JSR ConvertInput        
00001032                            32      * Store user Input start address to A5
00001032  23C3 0000119C             33      MOVE.L  D3, StartLocData
00001038  2A79 0000119C             34      MOVE.L  StartLocData, A5  
0000103E                            35      
0000103E                            36          
0000103E                            37  GetInputEndADR  
0000103E  4282                      38      CLR.L   D2  
00001040  4283                      39      CLR.L   D3  
00001042  43F9 0000113A             40      LEA Mes_End_Adr,    A1  
00001048  103C 000D                 41      MOVE.B  #13,    D0  
0000104C  4E4F                      42      TRAP    #15 
0000104E                            43    
0000104E  6000 0088                 44      BRA Finish  
00001052                            45  *   Subroutine
00001052                            46  *_________________________________________________
00001052                            47  ConvertInput        
00001052  1419                      48         MOVE.B  (A1)+,  D2   
00001054  4EB9 0000106A             49         JSR    ConvertASCII
0000105A  D682                      50         ADD.L    D2, D3        
0000105C  0C11 0000                 51         CMPI.B   #$0,    (A1)    
00001060  6700 0006                 52         BEQ GoBack
00001064                            53         *LSL.B    #4, D2     
00001064                            54         *LSR.B    #4, D2    
00001064  E98B                      55         LSL.L    #4, D3  
00001066                            56         *ADD.L    D2, D3 
00001066  60EA                      57         BRA  ConvertInput
00001068                            58  GoBack
00001068  4E75                      59          RTS    
0000106A                            60         *LSR.B    
0000106A                            61  ConvertASCII
0000106A  0C02 0030                 62          CMPI.B  #$30,   D2     * Any input that are less than 30 is error    
0000106E  6D00 0048                 63          BLT Input_Error_Handler
00001072  0C02 0067                 64          CMPI.B  #$67,   D2    * Any input that are more or equal to 67 (g) is error 
00001076  6C00 0040                 65          BGE Input_Error_Handler  
0000107A                            66          * 30~39 Number
0000107A                            67          * 41~46 Cap Letter Till F
0000107A                            68          * 61~66 Till f
0000107A  0C02 0039                 69          CMPI.B   #$39,   D2 * 40 is immeidate data use CMPI   
0000107E  6F00 0012                 70          BLE IsNumber * If less than 40 then execute  
00001082                            71          *________________________________________________
00001082  0C02 0040                 72          CMPI.B  #$40,   D2  *   if it is between 3A (:) and 40 (@) throw Error   
00001086  6F00 0030                 73          BLE Input_Error_Handler
0000108A                            74          *_______________________________________________
0000108A  0C02 0041                 75          CMPI.B  #$41,   D2  * if not compare with 41 (A)    
0000108E  6C00 0008                 76          BGE IsLetter    *Bigger than or Equal to 41 then execute    
00001092                            77  IsNumber
00001092  0402 0030                 78          SUB.B   #$30,   D2        
00001096  4E75                      79          RTS 
00001098                            80  IsLetter
00001098                            81          * figure out either small leter or capital letter   
00001098  0C02 0046                 82          CMPI.B  #$46,   D2  * Compare with small letter F            
0000109C  6F00 0006                 83          BLE CapitalLetter   * if less or equal to 46 than small letter     
000010A0  6000 0008                 84          BRA SmallLetter     * else go to capital letter 
000010A4                            85  CapitalLetter   
000010A4                            86          *CMPI.B  #$40,   D2  
000010A4                            87          *BLE Input_Error_Handler 
000010A4  0402 0037                 88          SUB.B   #$37,   D2   * 46 - 37 = F
000010A8  4E75                      89          RTS 
000010AA                            90  SmallLetter  
000010AA  0C02 0060                 91          CMPI.B  #$60,   D2  * if less than or equal to 60 (') throw Error   
000010AE  6F00 0008                 92          BLE Input_Error_Handler
000010B2  0402 0057                 93          SUB.B   #$57,   D2    
000010B6  4E75                      94          RTS 
000010B8                            95          * tomorrow continue (less than 39) then subtract 30
000010B8                            96          
000010B8                            97  Input_Error_Handler
000010B8  6000 0002                 98          BRA Invalid 
000010BC                            99          
000010BC                           100  Invalid 
000010BC  43F9 00001195            101          LEA Extra_Space,    A1  
000010C2  103C 000E                102          MOVE.B  #14,    D0  
000010C6  4E4F                     103          TRAP    #15 
000010C8  43F9 00001159            104          LEA Mes_Invalid, A1 
000010CE  103C 000E                105          MOVE.B  #14,    D0  
000010D2  4E4F                     106          TRAP    #15 
000010D4                           107          *MOVE.B  #9, D0    
000010D4                           108          *TRAP    #15
000010D4  6000 FF36                109          BRA  GetInputStartADR    
000010D8                           110           
000010D8  FFFF FFFF                111  Finish  SIMHALT             ; halt simulator
000010DC                           112  
000010DC                           113  *        RTS 
000010DC                           114        
000010DC                           115     
000010DC                           116  
000010DC                           117  * Put variables and constants here
000010DC                           118  * Basic Print Message   
000010DC                           119  *____________________________________________________________________
000010DC  =0000000D                120  CR  EQU $0D     *   Carriage Return
000010DC  =0000000A                121  LF  EQU $0A     *   Line Feed
000010DC                           122  
000010DC= 57 65 6C 63 6F 6D ...    123  Mes_Welcome     DC.B    'Welcome to Disassembler Program', CR,  LF
000010FD= 46 69 6E 61 6C 20 ...    124                              DC.B    'Final Project for CSS 422',    CR, LF, 0
00001119= 50 6C 65 61 73 65 ...    125  Mes_Start_Adr       DC.B    'Please Enter Starting Location: ', 0
0000113A= 50 6C 65 61 73 65 ...    126  Mes_End_Adr     DC.B    'Please Enter Ending Location: ', 0
00001159                           127  
00001159= 54 68 65 20 41 64 ...    128  Mes_Invalid DC.B   'The Address You provided is Invalid', CR,  LF
0000117E= 54 65 72 6D 69 6E ...    129            DC.B 'Terminating Program.',  CR, LF, 0     
00001195= 0D 0A 00                 130  Extra_Space DC.B    CR, LF, 0   
00001198                           131  
00001198                           132  * Define Storage
00001198                           133  *_____________________________________________________________________
00001198                           134  UserInput   DS.L    1   
0000119C                           135  StartLocData    DS.L    1   * store starting address
000011A0                           136      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
CAPITALLETTER       10A4
CONVERTASCII        106A
CONVERTINPUT        1052
CR                  D
EXTRA_SPACE         1195
FINISH              10D8
GETINPUTENDADR      103E
GETINPUTSTARTADR    100C
GOBACK              1068
INPUT_ERROR_HANDLER  10B8
INVALID             10BC
ISLETTER            1098
ISNUMBER            1092
LF                  A
MES_END_ADR         113A
MES_INVALID         1159
MES_START_ADR       1119
MES_WELCOME         10DC
SMALLLETTER         10AA
START               1000
STARTLOCDATA        119C
USERINPUT           1198
