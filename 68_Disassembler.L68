00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 5/15/2020 5:43:42 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : 68k   Disassembler    
00000000                             3  * Written by :
00000000                             4  * Date       : 06/xx/2020    
00000000                             5  * Description: Final Project    
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  START:                  ; first instruction of program
00001000                             9  
00001000                            10  * Put program code here
00001000                            11  *_______Basic Print Out Welcome Message__________   
00001000  43F9 0000114F             12      LEA Mes_Welcome,    A1  
00001006  103C 000D                 13      MOVE.B  #13,    D0  
0000100A  4E4F                      14      TRAP    #15 
0000100C                            15      
0000100C                            16  *_______Get User Input____________________________
0000100C                            17  Get_Input_Start_ADR
0000100C  4282                      18      CLR.L   D2  
0000100E  4283                      19      CLR.L   D3
00001010                            20     
00001010  43F9 0000118C             21      LEA Mes_Start_Adr,  A1  ; ask start loc
00001016  103C 000E                 22      MOVE.B  #14, D0   
0000101A  4E4F                      23      Trap    #15     
0000101C  43F9 00001268             24      LEA UserInput,  A1  ;   get user input  
00001022  103C 0002                 25      MOVE.B  #2, D0  
00001026  4E4F                      26      TRAP    #15 
00001028                            27   
00001028  4EB9 0000108A             28      JSR ConvertInput        
0000102E                            29      * check if the address is odd then throw error just read right bit  
0000102E                            30      *ANDI.B  #1, D3  
0000102E  0803 0000                 31      BTST #0,    D3 * is Even?  
00001032  6600 00F8                 32      BNE Invalid_Adr_Not_Even  * Not even then go to invalid        
00001036                            33      
00001036                            34      * Store user Input start address to A5
00001036  23C3 0000126C             35      MOVE.L  D3, StartLocData
0000103C  2A79 0000126C             36      MOVE.L  StartLocData, A5  
00001042                            37      
00001042                            38  *_________Check Start Adr is Even Number__________________
00001042                            39  
00001042                            40          
00001042                            41  Get_Input_End_ADR  
00001042  4282                      42      CLR.L   D2  
00001044  4283                      43      CLR.L   D3  
00001046                            44      
00001046  43F9 000011AE             45      LEA Mes_End_Adr,    A1  ;   ask ending loc  
0000104C  103C 000E                 46      MOVE.B  #14,    D0       
00001050  4E4F                      47      TRAP    #15 
00001052                            48      
00001052  43F9 00001270             49      LEA EndLocData, A1  ;   get user input  
00001058  103C 0002                 50      MOVE.B  #2, D0  
0000105C  4E4F                      51      Trap    #15 
0000105E                            52   
0000105E  4EB9 0000108A             53      JSR ConvertInput    
00001064                            54      * check if the address is odd then throw error just read right bit 
00001064  0803 0000                 55      BTST    #0, D3  
00001068  6600 00C2                 56      BNE Invalid_Adr_Not_Even    
0000106C                            57      * Store user Input start address to A6  
0000106C  23C3 00001270             58      MOVE.L  D3, EndLocData
00001072  2C79 00001270             59      MOVE.L  EndLocData, A6  
00001078                            60      
00001078                            61  *________________________________________________________   
00001078                            62  *   Compare Starting Address and End Address see if it make sense       
00001078                            63  Check_Input_Address
00001078  4282                      64      CLR.L   D2  * clr out before use it 
0000107A  4283                      65      CLR.L   D3  * clr out before use it 
0000107C  240D                      66      MOVE.L  A5, D2  * move starting adr to d2 to check   
0000107E  260E                      67      MOVE.L  A6, D3  * move ending adr to d3 to check    
00001080  B483                      68      CMP.L   D3, D2  * end address is not bigger than starting addr and address same? Error  
00001082  6C00 008C                 69      BGE Invalid_Starting_Ending_Adr
00001086                            70      
00001086  6000 00C0                 71      BRA Finish  
0000108A                            72      
0000108A                            73  *_______End of User Input Adr______________________________ 
0000108A                            74  *   Subroutine
0000108A                            75  *_________________________________________________
0000108A                            76  ConvertInput        
0000108A  1419                      77         MOVE.B  (A1)+,  D2   
0000108C  4EB9 000010A2             78         JSR    ConvertASCII
00001092  D682                      79         ADD.L    D2, D3  * copy D2 to D3 
00001094                            80         *ADDA.L   D3, A4      
00001094  0C11 0000                 81         CMPI.B   #$0,    (A1)    
00001098  6700 0006                 82         BEQ GoBack
0000109C  E98B                      83         LSL.L    #4, D3  * Make room for next byte  
0000109E                            84          
0000109E  60EA                      85         BRA  ConvertInput
000010A0                            86  GoBack  
000010A0                            87          *MOVEA.L D3, A4  
000010A0  4E75                      88          RTS    
000010A2                            89  ConvertASCII
000010A2  0C02 0030                 90          CMPI.B  #$30,   D2     * Any input that are less than 30 is error    
000010A6  6D00 0048                 91          BLT Input_Error_Handler
000010AA  0C02 0067                 92          CMPI.B  #$67,   D2    * Any input that are more or equal to 67 (g) is error 
000010AE  6C00 0040                 93          BGE Input_Error_Handler  
000010B2                            94          * 30~39 Number
000010B2                            95          * 41~46 Cap Letter Till F
000010B2                            96          * 61~66 Till f
000010B2  0C02 0039                 97          CMPI.B   #$39,   D2 * 40 is immeidate data use CMPI   
000010B6  6F00 0012                 98          BLE IsNumber * If less than 40 then execute  
000010BA                            99          *________________________________________________
000010BA  0C02 0040                100          CMPI.B  #$40,   D2  *   if it is between 3A (:) and 40 (@) throw Error   
000010BE  6F00 0030                101          BLE Input_Error_Handler
000010C2                           102          *_______________________________________________
000010C2  0C02 0041                103          CMPI.B  #$41,   D2  * if not compare with 41 (A)    
000010C6  6C00 0008                104          BGE IsLetter    *Bigger than or Equal to 41 then execute    
000010CA                           105  IsNumber
000010CA  0402 0030                106          SUB.B   #$30,   D2        
000010CE  4E75                     107          RTS 
000010D0                           108  IsLetter
000010D0                           109          * figure out either small leter or capital letter   
000010D0  0C02 0046                110          CMPI.B  #$46,   D2  * Compare with small letter F            
000010D4  6F00 0006                111          BLE CapitalLetter   * if less or equal to 46 than small letter     
000010D8  6000 0008                112          BRA SmallLetter     * else go to capital letter 
000010DC                           113  CapitalLetter   
000010DC  0402 0037                114          SUB.B   #$37,   D2   * 46 - 37 = F
000010E0  4E75                     115          RTS 
000010E2                           116  SmallLetter  
000010E2  0C02 0060                117          CMPI.B  #$60,   D2  * if less than or equal to 60 (') throw Error   
000010E6  6F00 0008                118          BLE Input_Error_Handler
000010EA  0402 0057                119          SUB.B   #$57,   D2    
000010EE  4E75                     120          RTS  
000010F0                           121  *_________________________Error Handle___________________________________      
000010F0                           122  Input_Error_Handler
000010F0  6000 0002                123          BRA Invalid 
000010F4                           124          
000010F4                           125  Invalid 
000010F4  43F9 0000114C            126          LEA Extra_Space,    A1  
000010FA  103C 000E                127          MOVE.B  #14,    D0  
000010FE  4E4F                     128          TRAP    #15 
00001100  43F9 000011CE            129          LEA Mes_Invalid, A1 
00001106  103C 000E                130          MOVE.B  #14,    D0  
0000110A  4E4F                     131          TRAP    #15 
0000110C  6000 FEFE                132          BRA  Get_Input_Start_ADR    
00001110                           133          
00001110                           134  Invalid_Starting_Ending_Adr
00001110  43F9 0000114C            135          LEA  Extra_Space,   A1  
00001116  103C 000E                136          MOVE.B  #14,    D0  
0000111A  4E4F                     137          TRAP    #15 
0000111C  43F9 00001229            138          LEA Mes_Starting_Ending_Adr_Error,  A1  
00001122  103C 000E                139          MOVE.B  #14,    D0  
00001126  4E4F                     140          TRAP    #15 
00001128  6000 FEE2                141          BRA Get_Input_Start_ADR
0000112C                           142           
0000112C                           143  Invalid_Adr_Not_Even
0000112C  43F9 0000114C            144          LEA Extra_Space,    A1  
00001132  103C 000E                145          MOVE.B  #14,    D0  
00001136  4E4F                     146          TRAP    #15 
00001138  43F9 000011F4            147          LEA Mes_EvenNumber_Error,   A1  
0000113E  103C 000E                148          MOVE.B  #14,    D0  
00001142  4E4F                     149          TRAP    #15 
00001144  6000 FEC6                150          BRA Get_Input_Start_ADR 
00001148                           151      
00001148                           152  
00001148                           153      
00001148  FFFF FFFF                154  Finish  SIMHALT             ; halt simulator
0000114C                           155          
0000114C                           156  
0000114C                           157  * Put variables and constants here
0000114C                           158  * Basic Print Message   
0000114C                           159  *____________________________________________________________________
0000114C  =0000000D                160  CR  EQU $0D     *   Carriage Return
0000114C  =0000000A                161  LF  EQU $0A     *   Line Feed
0000114C= 0D 0A 00                 162  Extra_Space DC.B    CR, LF, 0 
0000114F= 57 65 6C 63 6F 6D ...    163  Mes_Welcome     DC.B    'Welcome to Disassembler Program', CR,  LF
00001170= 46 69 6E 61 6C 20 ...    164                              DC.B    'Final Project for CSS 422',    CR, LF, 0
0000118C= 50 6C 65 61 73 65 ...    165  Mes_Start_Adr       DC.B    'Please Enter Starting Location: $', 0
000011AE= 50 6C 65 61 73 65 ...    166  Mes_End_Adr     DC.B    'Please Enter Ending Location: $', 0
000011CE                           167  
000011CE= 54 68 65 20 41 64 ...    168  Mes_Invalid DC.B   'The Address You provided is Invalid', CR,  LF,  0   
000011F4                           169              
000011F4= 54 68 65 20 41 64 ...    170  Mes_EvenNumber_Error    DC.B    'The Address You provided is not even ending number',  CR, LF, 0
00001229= 59 6F 75 72 20 53 ...    171  Mes_Starting_Ending_Adr_Error   DC.B    'Your Starting Address is bigger or equal than Ending Adrress', CR, LF, 0   
00001268                           172    
00001268                           173  
00001268                           174  * Define Storage
00001268                           175  *_____________________________________________________________________
00001268                           176  UserInput   DS.L    1   
0000126C                           177  StartLocData    DS.L    1   * store starting address
00001270                           178  EndLocData  DS.L    1   *   Store ending address    
00001274                           179  
00001274                           180      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
CAPITALLETTER       10DC
CHECK_INPUT_ADDRESS  1078
CONVERTASCII        10A2
CONVERTINPUT        108A
CR                  D
ENDLOCDATA          1270
EXTRA_SPACE         114C
FINISH              1148
GET_INPUT_END_ADR   1042
GET_INPUT_START_ADR  100C
GOBACK              10A0
INPUT_ERROR_HANDLER  10F0
INVALID             10F4
INVALID_ADR_NOT_EVEN  112C
INVALID_STARTING_ENDING_ADR  1110
ISLETTER            10D0
ISNUMBER            10CA
LF                  A
MES_END_ADR         11AE
MES_EVENNUMBER_ERROR  11F4
MES_INVALID         11CE
MES_STARTING_ENDING_ADR_ERROR  1229
MES_START_ADR       118C
MES_WELCOME         114F
SMALLLETTER         10E2
START               1000
STARTLOCDATA        126C
USERINPUT           1268
