00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 5/14/2020 1:52:22 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : 68k   Disassembler    
00000000                             3  * Written by :
00000000                             4  * Date       : 06/xx/2020    
00000000                             5  * Description: Final Project    
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  START:                  ; first instruction of program
00001000                             9  
00001000                            10  * Put program code here
00001000                            11  *_______Basic Print Out Welcome Message__________   
00001000  43F9 00001084             12      LEA Mes_Welcome,    A1  
00001006  103C 000D                 13      MOVE.B  #13,    D0  
0000100A  4E4F                      14      TRAP    #15 
0000100C                            15      
0000100C                            16  *_______Get User Input____________________________
0000100C                            17  GetInput
0000100C  43F9 000010C1             18      LEA Mes_Start_Adr,  A1  ; ask start loc
00001012  103C 000E                 19      MOVE.B  #14, D0   
00001016  4E4F                      20      Trap    #15     
00001018                            21      
00001018  43F9 00001102             22      LEA UserInput,  A1  
0000101E  103C 0002                 23      MOVE.B  #2, D0  
00001022  4E4F                      24      TRAP    #15 
00001024                            25      
00001024  4282                      26      CLR.L   D2  
00001026  4283                      27      CLR.L   D3  
00001028  4EB9 0000103A             28      JSR ConvertInput        
0000102E                            29     
0000102E  23C3 00001106             30      MOVE.L  D3, StartLocData
00001034  2A79 00001106             31      MOVE.L  StartLocData, A5    
0000103A                            32  *   Subroutine
0000103A                            33  *_________________________________________________
0000103A                            34  ConvertInput        
0000103A  1419                      35         MOVE.B  (A1)+,  D2   
0000103C  4EB9 00001052             36         JSR    ConvertASCII
00001042  D682                      37         ADD.L    D2, D3        
00001044  0C11 0000                 38         CMPI.B   #$0,    (A1)    
00001048  6700 0006                 39         BEQ GoBack
0000104C                            40         *LSL.B    #4, D2     
0000104C                            41         *LSR.B    #4, D2    
0000104C  E98B                      42         LSL.L    #4, D3  
0000104E                            43         *ADD.L    D2, D3 
0000104E  60EA                      44         BRA  ConvertInput
00001050                            45  GoBack
00001050  4E75                      46          RTS    
00001052                            47         *LSR.B    
00001052                            48  ConvertASCII
00001052                            49          * 30~39 Number
00001052                            50          * 41~46 Cap Letter Till F
00001052                            51          * 61~66 Till f
00001052  0C02 0040                 52          CMPI.B   #$40,   D2 * 40 is immeidate data use CMPI   
00001056  6D00 000A                 53          BLT IsNumber * If less than 40 then execute 
0000105A  0C02 0041                 54          CMPI.B  #$41,   D2  * if not compare with 41 (A)    
0000105E  6C00 0008                 55          BGE IsLetter    *Bigger than or Equal to 41 then execute    
00001062                            56  IsNumber
00001062  0402 0030                 57          SUB.B   #$30,   D2     
00001066                            58          *BRA ConvertASCII    
00001066  4E75                      59          RTS 
00001068                            60  IsLetter
00001068                            61          * figure out either small leter or capital letter   
00001068  0C02 0046                 62          CMPI.B  #$46,   D2  * Compare with small letter F            
0000106C  6F00 0006                 63          BLE CapitalLetter   * if less or equal to 46 than small letter     
00001070  6000 0008                 64          BRA SmallLetter     * else go to capital letter 
00001074                            65  CapitalLetter   
00001074  0402 0037                 66          SUB.B   #$37,   D2    
00001078  4E75                      67          RTS 
0000107A                            68  SmallLetter  
0000107A  0402 0057                 69          SUB.B   #$57,   D2    
0000107E  4E75                      70          RTS 
00001080                            71          * tomorrow continue (less than 39) then subtract 30
00001080  FFFF FFFF                 72      SIMHALT             ; halt simulator
00001084                            73  
00001084                            74  * Put variables and constants here
00001084                            75  * Basic Print Message   
00001084                            76  *____________________________________________________________________
00001084  =0000000D                 77  CR  EQU $0D     *   Carriage Return
00001084  =0000000A                 78  LF  EQU $0A     *   Line Feed
00001084                            79  
00001084= 57 65 6C 63 6F 6D ...     80  Mes_Welcome     DC.B    'Welcome to Disassembler Program', CR,  LF
000010A5= 46 69 6E 61 6C 20 ...     81                              DC.B    'Final Project for CSS 422',    CR, LF, 0
000010C1= 50 6C 65 61 73 65 ...     82  Mes_Start_Adr       DC.B    'Please Enter Starting Location: ', 0
000010E2= 50 6C 65 61 73 65 ...     83  Mes_End_Adr     DC.B    'Please Enter Ending Location: ', 0
00001101                            84  
00001101                            85  
00001101                            86  * Define Storage
00001101                            87  *_____________________________________________________________________
00001102                            88  UserInput   DS.L    1   
00001106                            89  StartLocData    DS.L    1   
0000110A                            90      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
CAPITALLETTER       1074
CONVERTASCII        1052
CONVERTINPUT        103A
CR                  D
GETINPUT            100C
GOBACK              1050
ISLETTER            1068
ISNUMBER            1062
LF                  A
MES_END_ADR         10E2
MES_START_ADR       10C1
MES_WELCOME         1084
SMALLLETTER         107A
START               1000
STARTLOCDATA        1106
USERINPUT           1102
